2.ООП дозволяе розiбрати проблему по складовим частинам i встановити вiдношення мiж цими частинами. По сутi це спрощення задачi для програмiста. Класи доволi зручнi для цiеi задачi. Також завдяки цьому можна викор\истовувати iнкапсуляцiю для захисту данних. Звичайно, полiморфiзм, що таком допомагае спростити роботу.
З iншого боку, хоча класи i зручнi, вони потребують деяких знань в областi. Створення класiв не просте завдання для того, хто починае працювати з ООП.


1. Складнiсть алгоритму - це оцiнка деяких якостей алгоритму, таких як час i використання пам'ятi. Деякi алгоритми краще справляються з простiшими задачами, але зi складнiшими краще використовувати iншi. Так звана О-нотацiя це класифiкацiя складностi.
Наприклад, для пошуку якогось элементу масива стандартний метод - це прохождення по всiм n елементам, тобто лiнiйна складнiсть. Бiнарна складнiсть утворюеться коли ми шукаемо елемент шляхом, наприклад, дiлення на 2. Тобто, кожний раз ми вiдкидаемо якусь частину.
